name: First Workflow
on: [ push, workflow_dispatch ]
env:
  DB_NAME: test-db
jobs:
  first-job:
    runs-on: ubuntu-latest
    steps:
    - name: my first step
      env:
        FIRST_NAME: Nhut
        LAST_NAME: Pham
      run: |
        echo "Hello World"
        echo "My name is " $FIRST_NAME $LAST_NAME
    - name: my second step
      if: success()
      run: echo "Done - Bye"
  build-job:
    needs: first-job
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish-step.outputs.script-file }}
    steps:
    - name: get code
      uses: actions/checkout@v3
    - name: cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: install NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: install dependencies
      run: npm ci
    - name: build
      run: |
        echo "package file" > package.json
        mkdir dist
        cd dist
        mktemp XXXXXXXXXX.$(mktemp -u XXX)
    - name: publish file
      id: publish-step
      run: find dist/*.* -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-files
        path: |
          dist
          package.json
  deploy-job:
    needs: build-job
    environment: testing
    env:
      DB_ADDRESS: db.com
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    runs-on: ubuntu-latest
    steps:
    - name: get code
      uses: actions/checkout@v3
    - name: cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: install NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: install dependencies
      run: npm ci
    - name: download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist-files
    - name: output content
      run: |
        ls
        ls dist
    - name: output filename
      run: echo ${{ needs.build-job.outputs.script-file }}
    - name: output application information
      run: |
        echo "DB_NAME: ${{ env.DB_NAME }}"
        echo "DB_ADDRESS: ${{ env.DB_ADDRESS }}"
        echo "DB_USERNAME / PASS: ${{ env.DB_USERNAME}} / ${{ env.DB_PASSWORD }}"
    - name: deploy
      run: echo "deploying..."
  independent-job:
    runs-on: ubuntu-latest
    steps:
    - name: independent step
      run: |
        echo "independent step"
  failure-job:
    runs-on: ubuntu-latest
    steps:
    - name: failure job
      run: |
        echo "failure job"
        # abcdef
  report-job:
    # needs: [deploy-job, independent-job, failure-job]
    # if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: output error
        run: |
          echo "something went wrong"
          echo "${{ toJSON(github) }}"
